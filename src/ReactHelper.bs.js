// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");

function option(op) {
  if (op !== undefined) {
    return Caml_option.valFromOption(op);
  } else {
    return null;
  }
}

function andThen(a, b, v) {
  return Curry._1(b, Curry._1(a, v));
}

function optionalHandler(op) {
  if (op !== undefined) {
    return Curry._1(op, undefined);
  }
  
}

function queryParamStrToTuple(str) {
  var match = str.split("=");
  if (match.length !== 2) {
    return ;
  }
  var key = match[0];
  var value = match[1];
  return [
          key,
          value
        ];
}

function optionToArray(op) {
  if (op !== undefined) {
    return [Caml_option.valFromOption(op)];
  } else {
    return [];
  }
}

var mapFromArray = Belt_MapString.fromArray;

function routeToqueryParamMap(route) {
  return Belt_MapString.fromArray(Belt_Array.concatMany($$Array.map((function (param) {
                        return optionToArray(queryParamStrToTuple(param));
                      }), route.search.split("&"))));
}

var Router = {
  queryParamStrToTuple: queryParamStrToTuple,
  optionToArray: optionToArray,
  mapFromArray: mapFromArray,
  routeToqueryParamMap: routeToqueryParamMap
};

var $great$great = andThen;

exports.option = option;
exports.andThen = andThen;
exports.$great$great = $great$great;
exports.optionalHandler = optionalHandler;
exports.Router = Router;
/* No side effect */
