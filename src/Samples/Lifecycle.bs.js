// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");

function MakePage(Mvu) {
  var update = function (msg, page) {
    var tup = Curry._2(Mvu.update, msg, page.model);
    return [
            {
              model: tup[0]
            },
            tup[1]
          ];
  };
  var init = function (seed) {
    return {
            model: Curry._1(Mvu.init, seed)
          };
  };
  return {
          update: update,
          init: init
        };
}

function update(msg, model) {
  switch (msg.TAG | 0) {
    case /* AddTodo */0 :
        return [
                List.append({
                      hd: msg._0,
                      tl: /* [] */0
                    }, model),
                /* [] */0
              ];
    case /* ReceiveTodos */1 :
        return [
                msg._0,
                /* [] */0
              ];
    case /* DeteteTodo */2 :
        var id = msg._0;
        return [
                List.filter(function (todo) {
                        return todo.id === id;
                      })(model),
                /* [] */0
              ];
    
  }
}

function init(seed) {
  return {
          hd: seed,
          tl: /* [] */0
        };
}

var TodoMvu = {
  update: update,
  init: init
};

function update$1(msg, page) {
  var tup = update(msg, page.model);
  return [
          {
            model: tup[0]
          },
          tup[1]
        ];
}

function init$1(seed) {
  return {
          model: {
            hd: seed,
            tl: /* [] */0
          }
        };
}

var TodoPage = {
  update: update$1,
  init: init$1
};

var todoPage = {
  model: {
    hd: {
      id: {
        _0: "",
        [Symbol.for("name")]: "Id"
      },
      title: "nama"
    },
    tl: /* [] */0
  }
};

var a = todoPage.model;

var headTodo = List.hd(a);

var headTitleTodo = headTodo.title;

var match = update$1({
      TAG: 2,
      _0: {
        _0: "",
        [Symbol.for("name")]: "Id"
      },
      [Symbol.for("name")]: "DeteteTodo"
    }, todoPage);

var promises = match[1];

var updatePromise = Promise.all($$Array.of_list(promises));

var updatedTodoPage = match[0];

exports.MakePage = MakePage;
exports.TodoMvu = TodoMvu;
exports.TodoPage = TodoPage;
exports.todoPage = todoPage;
exports.a = a;
exports.headTodo = headTodo;
exports.headTitleTodo = headTitleTodo;
exports.updatedTodoPage = updatedTodoPage;
exports.promises = promises;
exports.updatePromise = updatePromise;
/* headTodo Not a pure module */
