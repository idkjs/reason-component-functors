// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReactCompat = require("reason-react-compat/src/ReactCompat.bs.js");
var FlexibleTable$ReactTemplate = require("../FlexibleTable.bs.js");

function renderRow(headers, data) {
  var row = $$Array.of_list(List.map((function (header) {
              var match = header.column;
              switch (match) {
                case /* ID */0 :
                    return React.createElement("td", {
                                key: data.id + "id",
                                style: header.style
                              }, data.id);
                case /* Name */1 :
                    return React.createElement("td", {
                                key: data.id + "name",
                                style: header.style
                              }, data.text);
                case /* Age */2 :
                    return React.createElement("td", {
                                key: data.id + "age",
                                style: header.style
                              }, String(data.age));
                case /* Hobby */3 :
                    return React.createElement("td", {
                                key: data.id + "hb",
                                style: header.style
                              }, data.hobby);
                
              }
            }), headers));
  return React.createElement("tr", {
              key: data.id
            }, row);
}

function renderHeader(headers) {
  return React.createElement("tr", undefined, $$Array.of_list(List.map((function (header) {
                        var match = header.column;
                        switch (match) {
                          case /* ID */0 :
                              return React.createElement("th", {
                                          key: "header-id",
                                          style: header.style
                                        }, "ID");
                          case /* Name */1 :
                              return React.createElement("th", {
                                          key: "header-name",
                                          style: header.style
                                        }, "Name");
                          case /* Age */2 :
                              return React.createElement("th", {
                                          key: "header-age",
                                          style: header.style
                                        }, "Age");
                          case /* Hobby */3 :
                              return React.createElement("th", {
                                          key: "header-hobby",
                                          style: header.style
                                        }, "Hobby");
                          
                        }
                      }), headers)));
}

function renderFooter(param) {
  return null;
}

function dataRowStyle(param, param$1) {
  return "";
}

function headerRowStyle(param) {
  return "";
}

function footerRowStyle(param) {
  return "";
}

function defaultHeader(header) {
  switch (header) {
    case /* ID */0 :
        return {
                column: /* ID */0,
                size: {
                  _0: 200.0,
                  [Symbol.for("name")]: "Free"
                },
                isSizeFixed: false
              };
    case /* Name */1 :
        return {
                column: /* Name */1,
                size: {
                  _0: 200.0,
                  [Symbol.for("name")]: "Free"
                },
                isSizeFixed: false
              };
    case /* Age */2 :
        return {
                column: /* Age */2,
                size: {
                  _0: 200.0,
                  [Symbol.for("name")]: "Free"
                },
                isSizeFixed: false
              };
    case /* Hobby */3 :
        return {
                column: /* Hobby */3,
                size: {
                  _0: 200.0,
                  [Symbol.for("name")]: "Free"
                },
                isSizeFixed: false
              };
    
  }
}

var TodoTableDef = {
  dataRowStyle: dataRowStyle,
  headerRowStyle: headerRowStyle,
  footerRowStyle: footerRowStyle,
  defaultHeader: defaultHeader
};

var TodoFlexibleTable = FlexibleTable$ReactTemplate.FlexibleTable(TodoTableDef);

var defaultState_headerItems = Curry._1(TodoFlexibleTable.defaultHeaders, {
      hd: /* ID */0,
      tl: {
        hd: /* Name */1,
        tl: {
          hd: /* Hobby */3,
          tl: {
            hd: /* Age */2,
            tl: /* [] */0
          }
        }
      }
    });

var defaultState = {
  headerItems: defaultState_headerItems,
  tableClassName: "todo-table"
};

var todo = {
  text: "hy!",
  id: "id",
  age: 20,
  hobby: "hobty"
};

function TodoFlexibleTable$TodoTableSample(Props) {
  return ReactCompat.useRecordApi({
              willReceiveProps: ReactCompat.component.willReceiveProps,
              willUnmount: ReactCompat.component.willUnmount,
              didUpdate: ReactCompat.component.didUpdate,
              shouldUpdate: ReactCompat.component.shouldUpdate,
              willUpdate: ReactCompat.component.willUpdate,
              didMount: (function (self) {
                  setTimeout((function (param) {
                          return Curry._1(self.send, /* ExtendTable */1);
                        }), 3000);
                  
                }),
              initialState: (function (param) {
                  return defaultState;
                }),
              reducer: (function (action, state) {
                  if (action) {
                    return {
                            TAG: 0,
                            _0: {
                              headerItems: state.headerItems,
                              tableClassName: "big-todo-table"
                            },
                            [Symbol.for("name")]: "Update"
                          };
                  }
                  var tmpNextHeaderItems = List.tl(state.headerItems);
                  var nextHeaderItems = List.length(tmpNextHeaderItems) < 1 ? defaultState_headerItems : tmpNextHeaderItems;
                  return {
                          TAG: 2,
                          _0: {
                            headerItems: nextHeaderItems,
                            tableClassName: state.tableClassName
                          },
                          _1: (function (self) {
                              setTimeout((function (param) {
                                      return Curry._1(self.send, /* DeleteHeader */0);
                                    }), 1000);
                              
                            }),
                          [Symbol.for("name")]: "UpdateWithSideEffects"
                        };
                }),
              render: (function (self) {
                  return React.createElement(TodoFlexibleTable.make, {
                              datas: {
                                hd: todo,
                                tl: /* [] */0
                              },
                              headerItems: self.state.headerItems,
                              row: renderRow,
                              header: renderHeader,
                              footer: renderFooter,
                              tableClassName: self.state.tableClassName
                            });
                })
            });
}

var TodoTableSample = {
  defaultState: defaultState,
  todo: todo,
  make: TodoFlexibleTable$TodoTableSample
};

var getWidthSize = FlexibleTable$ReactTemplate.getWidthSize;

var headerItemToJs = FlexibleTable$ReactTemplate.headerItemToJs;

var headerItemFromJs = FlexibleTable$ReactTemplate.headerItemFromJs;

var valueToString = FlexibleTable$ReactTemplate.valueToString;

var stringFromValue = FlexibleTable$ReactTemplate.stringFromValue;

var getWidthSizeByTableWidthSize = FlexibleTable$ReactTemplate.getWidthSizeByTableWidthSize;

var FlexibleTable = FlexibleTable$ReactTemplate.FlexibleTable;

exports.getWidthSize = getWidthSize;
exports.headerItemToJs = headerItemToJs;
exports.headerItemFromJs = headerItemFromJs;
exports.valueToString = valueToString;
exports.stringFromValue = stringFromValue;
exports.getWidthSizeByTableWidthSize = getWidthSizeByTableWidthSize;
exports.FlexibleTable = FlexibleTable;
exports.renderRow = renderRow;
exports.renderHeader = renderHeader;
exports.renderFooter = renderFooter;
exports.TodoTableDef = TodoTableDef;
exports.TodoFlexibleTable = TodoFlexibleTable;
exports.TodoTableSample = TodoTableSample;
/* TodoFlexibleTable Not a pure module */
