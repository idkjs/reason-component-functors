// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Operator$ReactTemplate = require("../Operator.bs.js");
var Validation$ReactTemplate = require("../Validation.bs.js");

var validateText = Validation$ReactTemplate.fromErrors(function (text) {
      if (text.length > 10) {
        return {
                hd: /* TextIsOverMaxLength */0,
                tl: /* [] */0
              };
      } else {
        return /* [] */0;
      }
    });

function validateAge(getAge) {
  return Validation$ReactTemplate.fromErrors(function (record) {
              if (Curry._1(getAge, record) >= 0) {
                return /* [] */0;
              } else {
                return {
                        hd: /* InvalidAge */1,
                        tl: /* [] */0
                      };
              }
            });
}

function validateName(getName) {
  return Validation$ReactTemplate.fromErrors(function (record) {
              if (Curry._1(getName, record) === "") {
                return {
                        hd: /* InvalidName */0,
                        tl: /* [] */0
                      };
              } else {
                return /* [] */0;
              }
            });
}

function ifEmptyString(getString, errors) {
  return Validation$ReactTemplate.fromErrors(function (source) {
              if (Curry._1(getString, source) === "") {
                return errors;
              } else {
                return /* [] */0;
              }
            });
}

Validation$ReactTemplate.run(validateText, "success!");

Validation$ReactTemplate.run(Validation$ReactTemplate.all({
          hd: ifEmptyString(Operator$ReactTemplate.identity, {
                hd: /* TextIsEmpty */1,
                tl: /* [] */0
              }),
          tl: {
            hd: validateText,
            tl: /* [] */0
          }
        }), "");

var sample = {
  name: "dad",
  age: 30
};

Validation$ReactTemplate.run(Validation$ReactTemplate.all({
          hd: validateAge(function (prim) {
                return prim.age;
              }),
          tl: {
            hd: validateName(function (prim) {
                  return prim.name;
                }),
            tl: /* [] */0
          }
        }), sample);

exports.validateText = validateText;
exports.validateAge = validateAge;
exports.validateName = validateName;
exports.ifEmptyString = ifEmptyString;
/* validateText Not a pure module */
