// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/legacy/ReasonReact.bs.js");
var PromiseWrapper$ReactTemplate = require("./PromiseWrapper.bs.js");

function Make(D, Pdef) {
  var ResourcePromiseWrapper = PromiseWrapper$ReactTemplate.PromiseWrapper(Pdef);
  var ifError = React.createElement("div", undefined, "ERROR");
  var ifPending = React.createElement("div", undefined, "Loading");
  var ifSuccess = function (resource) {
    return Curry._1(D.render, Curry._1(D.initialize, resource));
  };
  var component = ReasonReact.statelessComponent(D.componentName);
  var Page$Make = function (Props) {
    var loadResourceArg = Props.loadResourceArg;
    return React.createElement(ResourcePromiseWrapper.make, {
                promise: Curry._1(D.loadResource, loadResourceArg),
                whenSuccess: ifSuccess,
                whenError: (function (param) {
                    return ifError;
                  }),
                whenPending: ifPending
              });
  };
  return {
          ResourcePromiseWrapper: ResourcePromiseWrapper,
          ifError: ifError,
          ifPending: ifPending,
          ifSuccess: ifSuccess,
          component: component,
          make: Page$Make
        };
}

function Page(D) {
  var initialize = function (loadResourceArg) {
    return Curry._1(D.loadResource, loadResourceArg).then(function (resource) {
                return Promise.resolve(Curry._1(D.render, Curry._1(D.initialize, resource)));
              });
  };
  return {
          initialize: initialize
        };
}

exports.Make = Make;
exports.Page = Page;
/* react Not a pure module */
