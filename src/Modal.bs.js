// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var ReactHelper$ReactTemplate = require("./ReactHelper.bs.js");

function modalSizeToAttr(size) {
  switch (size) {
    case /* Large */0 :
        return "modal-lg";
    case /* Small */1 :
        return "modal-sm";
    case /* Medium */2 :
        return "";
    
  }
}

var modalOpenStyle = {
  display: "block",
  left: "0",
  position: "fixed",
  right: "0",
  top: "0",
  visibility: "visible",
  zIndex: "1050",
  opacity: "1",
  transition: "all 0.5s"
};

var modalHiddenStyle = {
  bottom: "auto",
  display: "block",
  position: "fixed",
  top: "-100vh",
  visibility: "hidden",
  zIndex: "1050",
  opacity: "1",
  transition: "all 0.5s",
  pointerEvents: "none"
};

var modalBgStyle = {
  backgroundColor: "rgba(41, 38, 38, 0.5)",
  height: "100%",
  left: "0",
  position: "fixed",
  top: "0",
  width: "100%",
  zIndex: "1049"
};

var modalBgHiddenStyle = {};

function Modal(Props) {
  var hidden = Props.hidden;
  var size = Props.size;
  var onClickContentOutside = Props.onClickContentOutside;
  var header = Props.header;
  var footer = Props.footer;
  var body = Props.body;
  var modalClassName = "modal modal-dialog fade modal-dialog-centered " + modalSizeToAttr(size);
  return React.createElement(React.Fragment, {
              children: null
            }, React.createElement("div", {
                  className: modalClassName,
                  style: hidden ? modalHiddenStyle : modalOpenStyle,
                  onClick: (function (prim) {
                      prim.stopPropagation();
                      
                    })
                }, React.createElement("div", {
                      className: "modal-content"
                    }, ReactHelper$ReactTemplate.option(header), ReactHelper$ReactTemplate.option(body), ReactHelper$ReactTemplate.option(footer))), React.createElement("span", {
                  style: hidden ? modalBgHiddenStyle : modalBgStyle,
                  onClick: (function (param) {
                      return ReactHelper$ReactTemplate.optionalHandler(onClickContentOutside);
                    })
                }));
}

var make = Modal;

exports.modalSizeToAttr = modalSizeToAttr;
exports.modalOpenStyle = modalOpenStyle;
exports.modalHiddenStyle = modalHiddenStyle;
exports.modalBgStyle = modalBgStyle;
exports.modalBgHiddenStyle = modalBgHiddenStyle;
exports.make = make;
/* react Not a pure module */
